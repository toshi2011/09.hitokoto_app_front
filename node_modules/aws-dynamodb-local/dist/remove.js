"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.remove = void 0;
const node_fs_1 = require("node:fs");
const node_path_1 = require("node:path");
const deprecation_1 = require("./deprecation");
const constants_1 = require("./constants");
const remove = async (arg0, arg1) => {
    if (typeof arg0 === 'function' && typeof arg1 === 'string') {
        (0, deprecation_1.deprecation)('Pass the installPath argument via the first object argument');
        await (0, exports.remove)({ onComplete: arg0, installPath: arg1 });
        return;
    }
    if (typeof arg0 === 'function') {
        await (0, exports.remove)({ onComplete: arg0 });
        return;
    }
    if (typeof arg1 === 'string') {
        (0, deprecation_1.deprecation)('Pass the installPath argument via the first object argument');
        await (0, exports.remove)({ installPath: arg1 });
        return;
    }
    const installPath = arg0?.installPath ?? (0, node_path_1.resolve)(constants_1.defaultInstallPath);
    (0, node_fs_1.rmSync)(installPath, { recursive: true, force: true });
    // eslint-disable-next-line no-console
    console.log('Removal of DynamoDB Local complete.');
    if (arg0?.onComplete) {
        (0, deprecation_1.deprecation)('remove() now returns a Promise to be awaited, that should be used instead of the onComplete callback.');
        arg0.onComplete();
    }
};
exports.remove = remove;
